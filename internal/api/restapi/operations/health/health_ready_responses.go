// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/proplants/plantbook/internal/api/models"
)

// HealthReadyOKCode is the HTTP code returned for type HealthReadyOK
const HealthReadyOKCode int = 200

/*HealthReadyOK successful operation, service ready to process requests

swagger:response healthReadyOK
*/
type HealthReadyOK struct {
	/*The request id this is a response to

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewHealthReadyOK creates HealthReadyOK with default headers values
func NewHealthReadyOK() *HealthReadyOK {

	return &HealthReadyOK{}
}

// WithXRequestID adds the xRequestId to the health ready o k response
func (o *HealthReadyOK) WithXRequestID(xRequestID string) *HealthReadyOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the health ready o k response
func (o *HealthReadyOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the health ready o k response
func (o *HealthReadyOK) WithPayload(payload string) *HealthReadyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health ready o k response
func (o *HealthReadyOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthReadyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*HealthReadyDefault unexpected error

swagger:response healthReadyDefault
*/
type HealthReadyDefault struct {
	_statusCode int
	/*The request id this is a response to

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewHealthReadyDefault creates HealthReadyDefault with default headers values
func NewHealthReadyDefault(code int) *HealthReadyDefault {
	if code <= 0 {
		code = 500
	}

	return &HealthReadyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the health ready default response
func (o *HealthReadyDefault) WithStatusCode(code int) *HealthReadyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the health ready default response
func (o *HealthReadyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithXRequestID adds the xRequestId to the health ready default response
func (o *HealthReadyDefault) WithXRequestID(xRequestID string) *HealthReadyDefault {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the health ready default response
func (o *HealthReadyDefault) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the health ready default response
func (o *HealthReadyDefault) WithPayload(payload *models.ErrorResponse) *HealthReadyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health ready default response
func (o *HealthReadyDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthReadyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
